<html>
<head>
  <script src='interface.js'></script>
</head>
<body>
  <script>
  var states = [
    	[1,2,1,3],
    	[1,1,3,2,1],
    	[3,2,1,1,2,1],
    	[2,3,1,1,3,1,1],
    	[1,1,2,3,1,2,3,1],
    	[3,1,3,1,2,1,2,1,1],
    	[2,1,3,1,3,1,2,1,1,2],
    	[2,1,3,1,3,1,2,1,1,2,3],
    	[3,1,3,1,2,1,2,1,1,2,3,1],	
    	[3,1,3,1,2,1,2,1,1,2,2,1,3],	
    ],
    positions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    init = false,
    numberOfPerformers = 5;  
    
  panel = new Interface.Panel({ useRelativeSizesAndPositions: true });
  
  panel.background = "#000";
  panel.ctx.strokeStyle = "#fff";
  panel.ctx.font = 'normal 24px Helvetica';
  panel.ctx.textAlign = 'center';
  panel.ctx.textBaseline = 'middle';
  
  draw = function() {
    var ctx = panel.ctx,
        width = panel.width * .75,
        height = panel.height * .8,
        left = .2 * width,
        top = .1 * height,
        stateHeight = height / numberOfPerformers;
    
    ctx.strokeRect( left , top, width, height );    
    
    for(var i = 0; i < numberOfPerformers; i++) {
      var state = states[ i ],
          stateWidth = width / state.length;
      
      if( !init ) {
        ctx.fillStyle = 'white';
        ctx.fillText( '#' + (i + 1), left - .1 * width, top + ( i * stateHeight ) + stateHeight / 2 ) ;
      }
      
      for(var j = 0; j < state.length; j++) {
        var x = left + stateWidth * j,
            y = top + stateHeight * i;
            
        ctx.strokeRect( x, y, stateWidth, stateHeight )
        
        if( j === positions[i] ) {
          ctx.fillStyle = 'white';
          ctx.fillRect( x, y, stateWidth, stateHeight );
          ctx.fillStyle = 'black';
        }else{
          ctx.fillStyle = "black";
          ctx.fillRect( x, y, stateWidth, stateHeight );
          ctx.fillStyle = 'white';
        }
        
        ctx.fillText( state[j], x + stateWidth / 2, y + stateHeight / 2) ;
      }
    }
    init = true;
  };
  
  advance = function() {
    for(var i = 0; i < numberOfPerformers; i++) {
      positions[ i ] = (positions[ i ] + 1) % states[ i ].length;
    }

    draw();
  }
  
  draw();
  
  Interface.OSC.receive = function( data ) { console.log(data); if(data === 'advance') advance(); };
  
  setTimeout( function() {
    Interface.OSC.send('/master', 'i', numberOfPerformers);
  }, 1000);
  </script>
</body>
</html>